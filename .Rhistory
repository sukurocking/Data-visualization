?dhyper()
dhyper(3,5,5,6)
dhyper(3,5,5,4)
?pt
x <- rnorm(10,mean = 2, sd = 1)
mean(x)
ttest <- t.test(x,alternative = "less",mu = 2)
ttest
ttest$conf.int
class(ttest$conf.int)
ttest$parameter
ttest$data.name
str(ttest)
pt(x,df = 9)
pt(-0.12,df = 9)
ttest$statistic
ttest$p.value
pt(ttest$statistic,df = 9)
identical(pt(ttest$statistic,df = 9),ttest$p.value)
pt(ttest$statistic,df = 9)==ttest$p.value
?chisq.test()
x <- data.frame(a=1:8,b=2:9)
x
with(x,a+b)
getwd
getwd()
plotly::plot_ly(data,)
q()
a <- factor("city1","city2","city2","city1")
b <- c(4,5,7,8)
city <- data.frame(a,b)
city
a <- factor(c("city1","city2","city2","city1"))
city <- data.frame(a,b)
city
library(dplyr)
group_by(city,a)
class(group_by(city,a))
?tbl_df
?tbl_df
?min_rank
cummax(1:10)
cummin(1:10)
data(cars)
View(cars)
ggplot(cars,aes(x = ~speed, y= ~dist)) + geom_point(color = "blue")
library(ggplot2)
ggplot(cars,aes(x = ~speed, y= ~dist)) + geom_point(color = "blue")
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = "blue")
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = "green")
ggplot(cars,aes(x = speed, y= dist)) + geom_point(aes(color = "green"))
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = "green")
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = speed)
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = "speed")
ggplot(cars,aes(x = speed, y= dist)) + geom_point(color = ~speed)
summary(mtcars)
x <- summary(mtcars)
str(x)
x$"mpg"
x$mpg
x$1
x$mpg
x["mpg"]
x[,"mpg"]
x[,mpg]
x[,~mpg]
x[,"mpg"]
x[,1]
x[4,]
x <- summary(mtcars)
x[4,]
install.packages("tidyverse")
library(lubridate)
dmy(06-03-2017) - dmy(23-05-2017)
dmy(06/03/2017) - dmy(23/05/2017)
x <- dmy(06/03/2017)
x <- dmy(06-03-2017)
x
?dmy
dmy(06/03/17) - dmy(23/05/17)
dmy(06-03-17) - dmy(23-05-17)
dmy(01-Mar-2017)
dmy(01-March-2017)
dmy(01-03-2017)
dmy(01-03-17)
dmy(010317)
dmy(01,03,17)
dmy("06-03-17") - dmy("23-05-17")
dmy("23-05-17") - dmy("06-03-17")
a <- url("https://jigsawacademy.net/courses/119/pages/video/class-recording-of-oct-premium-2016-data-manupulation-and-data-visualization")
str(a)
x <- a
rm(x)
getAllConnections(a)
getAllConnections(a)
?getAllConnections
getAllConnections
getAllConnections()
?tbl_df
library(tibble)
?tbl_df
help(class = tbl_df)
?tibble
a <- 1:5
tibble(a, b = a * 2)
class(tibble(a, b = a * 2))
?data.frame
?tbl_df
??tbl_df
?dplyr::tbl_df
?dplyr::tbl
library(tidyverse)
setwd(""E:/tutorials/Jigsaw/R/Data visualization/Data Visualiazaion in R - Pre class Videos"")
setwd("E:/tutorials/Jigsaw/R/Data visualization/Data Visualiazaion in R - Pre class Videos")
dm <- read_csv("DirectMarketing.csv")
rm(a)
View(dm)
dm %>% select(Gender, Salary) %>% filter(min_rank(desc(Salary)) <= 5) %>% arrange(desc(Salary))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(min_rank(desc(Salary)) <= 5) %>% arrange(desc(Salary))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(min_rank(desc(Salary)) <= 5) %>% arrange(desc(Gender))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(min_rank(desc(Salary)) <= 5) %>% arrange(desc(Income))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(cume_dist(desc(Salary)) <= 0.01) %>% arrange(desc(Income))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(cume_dist(desc(Salary)) <= 0.01) %>% arrange(desc(Salary))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(cume_dist(desc(Salary)) <= 0.005) %>% arrange(desc(Salary))
x <- seq(from = 1, to = 20, by= 5)
cumsum(x)
cummin(x)
cummax(x)
cumprod(x)
66*6
66*16
cumall(x)
?cumall
cumany(x)
cumany(x,x)
cumany(x<=9)
cumany(x>=9)
cumall(x<=9)
x <- seq(from = 1, to = 20, by= 3)
cume_dist(x)
cume_dist(x)<=0.5
dm %>% select(Gender,Salary) %>% mutate(Group = ntile(Salary,10)) %>% group_by(Group) %>% summarise(count = n())
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(Salary, 10)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
)
?ntile
dm %>% select(Gender,Salary) %>% mutate(Group = ntile(desc(Salary),10)) %>% group_by(Group) %>% summarise(count = nrow(),Cummulative_total = cumsum(count))
dm %>% select(Gender,Salary) %>% mutate(Group = ntile(desc(Salary),10)) %>% group_by(Group) %>% summarise(count = n(),Cummulative_total = cumsum(count))
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(desc(Salary), 10)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
) %>% mutate(Cummulative_total = cumsum(count))
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(desc(Salary), 10)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
) %>% mutate(Cummulative_total = cumsum(count)) %>% filter(Cummulative_total >=
800)
oj <- read.csv("E:/tutorials/Jigsaw/R/Data manipulation/oj.csv")
a <- oj[oj$brand == "tropicana"]
a <- oj[oj$brand == "tropicana",]
class(a)
b <- dplyr::filter(oj,brand =="tropicana")
class(b)
str(a)
str(b)
identical(a,b)
View(a)
View(b)
rownames(a)==rownames(b)
rownames(b)
rownames(a)
names(a) == names(b)
all.equal(a,b)
rownames(a)==rownames(b)
rownames(a[111,])
rownames(b[111,])
rm(list=ls())
dm <- read_csv("E:\tutorials\Jigsaw\R\Data visualization\Data Visualiazaion in R - Pre class Videos\DirectMarketing.csv")
dm <- read_csv("E:\tutorials\Jigsaw\R\Data visualization\Data Visualiazaion in R - Pre class Videos\DirectMarketing.csv")
dm <- read_csv("E:/tutorials/Jigsaw/R/Data visualization/Data Visualiazaion in R - Pre class Videos/DirectMarketing.csv")
library(tidyverse)
dm <- read_csv("E:/tutorials/Jigsaw/R/Data visualization/Data Visualiazaion in R - Pre class Videos/DirectMarketing.csv")
View(dm)
head(dm)
dim(dm)
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(min_rank(desc(Salary))) %>% arrange(desc(Salary))
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(min_rank(desc(Salary))<=2) %>% arrange(desc(Salary))
x <- sample(1:20,15)
cumsum(x)
x <- sample(1:20,7)
x <- sample(1:20,7)
cumsum(x)
cummin(x)
cumall(x<=5)
cume_dist(x)
cumprod(x) #Calculate cumulative product
cumany(x<=5)
cummax(x)
dm %>% select(Gender,Salary) %>% group_by(Gender) %>% filter(cume_dist(desc(Salary)) <= 0.02)
dm %>% select(Gender, Salary) %>% group_by(Gender) %>% filter(cume_dist(desc(Salary)) <= 0.02) %>% arrange(desc(Salary))
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(Salary, 10)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
)
maximum = max(Salary),
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(Salary, 10)) %>% group_by(Group) %>% arrange(desc(Salary)) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
)
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(Salary, 10)) %>% arrange(desc(Salary)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
)
dm %>% select(Gender, Salary) %>% mutate(Group = ntile(desc(Salary), 10)) %>% group_by(Group) %>% summarise(
maximum = max(Salary),
minimum = min(Salary),
count = n()
)
View(dm)
str(dm)
p <- ggplot(dm,aes(x=Age, y = Salary))
p + geom_bar(aes(Gender))
p + geom_bar(aes(Gender),stat = "identity")
p + geom_bar(color=Gender,stat = "identity")
p + geom_bar(aes(color=Gender),stat = "identity")
p <- ggplot(dm,aes(x=Age, y = Salary,aes(color=Gender)))
p + geom_bar(stat = "identity")
p <- ggplot(dm,aes(x=Age, y = Salary,color=Gender))
p + geom_bar(stat = "identity")
p <- ggplot(dm,aes(x=as.factor(Age), y = Salary,color=Gender))
p + geom_bar(stat = "identity")
p <- ggplot(dm,aes(x=Age, y = Salary,color=Gender))
p + geom_col(stat = "identity")
p <- ggplot(dm,aes(x=Age,color=Gender))
p + geom_col(stat = "count")
p <- ggplot(dm,aes(x=Age,y = Gender, color=Gender))
p + geom_col(stat = "count")
p <- ggplot(dm,aes(x=Age,y = Gender))
p <- ggplot(dm,aes(x=Age,y = Gender))
p + geom_bar
p + geom_bar()
p + geom_bar(stat = "identity")
p + geom_point(stat = "identity")
p + geom_area(stat = "identity")
p + geom_area()
p + geom_blank()
p <- ggplot(dm,aes(x=as.factor(Age),y = as.factor(Gender)))
p + geom_blank()
p + geom_col()
p + geom_bar()
p + geom_bar(stat = "identity")
?ggplot2::StatEllipse
p <- ggplot(dm,aes(x = Age, y = Salary))
p
p + geom_point(aes(color = Gender))
p + geom_point(aes(color = Gender)) + facet_wrap(Gender~)
p + geom_point(aes(color = Gender)) + facet_wrap(~Gender)
p + geom_point(aes(color = Gender)) + facet_wrap(.~Gender)
p + geom_point(aes(color = Gender)) + facet_wrap(Gender~.)
p + geom_point(aes(color = Gender)) + facet_grid(Gender~.)
p + geom_point(aes(color = Gender)) + facet_grid(~Gender)
p + geom_point(aes(color = Gender)) + facet_grid(Gender)
p + geom_point(aes(color = Gender)) + facet_wrap(~Gender)
p + geom_point(aes(color = Gender)) + facet_grid(~Gender) + geom_smooth()
p + geom_point(aes(color = Gender)) + facet_grid(~Gender) + geom_smooth(~Salary)
p + geom_point(aes(color = Gender)) + facet_grid(~Gender) + geom_smooth()
p + geom_point(aes(size = Gender))
p + geom_point(aes(size = Gender)) + scale_size_discrete(c(1,2))
p + geom_point(aes(size = Gender)) + scale_size_discrete(c(1,4))
p + geom_point(aes(size = Gender)) + scale_size_discrete(labels = c("F","M")))
p + geom_point(aes(size = Gender)) + scale_size_discrete(labels = c("F", "M"))
p + geom_point(aes(color = Gender)) + scale_color_discrete(low = "blue", high = "red")
library(tidyverse)
??toRGB
p + geom_point(aes(color = Gender)) + scale_color_discrete(plotly::toRGB("red"))
p + geom_point(aes(color = Salary)) + scale_color_continuous(low = "blue", high = "red")
p <- ggplot(dm,aes(x = Age, y = Gender))
p + geom_point(aes(color = Salary))
p <- ggplot(dm,aes(x = Gender, y = Salary))
p+ geom_bar(stat = "identity")
p + geom_bar(stat = "count")
p+ geom_bar(stat = "identity")
p + geom_bar(stat = "identity", aes(color = Age))
p + geom_boxplot(stat = "identity", aes(color = Age))
p + geom_boxplot(aes(color = Age))
p + geom_boxplot(aes(color = Age)) + scale_color_discrete()
p + geom_boxplot(aes(color = Age)) + scale_color_gradient(Middle = "red", Old = "Yellow", Young = "blue")
p + geom_boxplot(aes(color = Age)) + scale_color_gradient()
?scale_color_discrete
?Orange
or <- Orange
View(or)
View(or)
meuse <- sp::loadMeuse()
demo(meuse)
demo(sp::meuse)
library(sp)
load(meuse)
demo(meuse)
meuse <- meuse
meuse <- demo(meuse)
loadMeuse()
data("meuse")
View(meuse)
rm(list = ls())
q()
library(sp)
library(leaflet)
library(ggmap)
map <- ggmap::get_map("bangalore")
library(tidyverse)
schools <- read_csv("schools.csv")
View(schools)
ggmap(map,) + geom_point(data = schools, aes(~long,~lat))
ggmap(map) + geom_point(data = schools, aes(x = long, y = lat))
ggmap(map) + geom_point(data = schools, aes(x = long, y = lat), color = "red") + labs(x = Longitude, y = Latitude, title = "Bangalore Schools")
ggmap(map) + geom_point(data = schools, aes(x = long, y = lat), color = "red") + labs(x = "Longitude", y = "Latitude", title = "Bangalore Schools")
library(rgd)
library(rgdal)
ny <- readOGR(dsn = "nyha_15a", layer = "nyha")
subway <- readOGR("Subway", layer = "DOITT_SUBWAY_ENTRANCE_01_13SEPT2010")
class(ny)
class(subway)
head(ny@data)
head(subway@data)
ny@bbox
subway@bbox
head(subway@coords)
ny_sp <- spTransform(ny,CRSobj = "+init=espg:4326")
ny_sp <- spTransform(ny,CRSobj = CRS("+init=espg:4326"))
ny_sp <- spTransform(ny,CRSobj = CRS("+init=epsg:4326"))
class(ny_sp)
ny_sp@bbox
rm(schools,map)
rm(subway)
rm(ny_sp)
ny_longlat <- spTransform(ny,CRSobj = CRS("+init=epsg:4326"))
class(ny_longlat)
leaflet(data = ny_longlat)
leaflet(data = ny_longlat) %>% addMarkers()
subway <- readOGR("Subway", layer = "DOITT_SUBWAY_ENTRANCE_01_13SEPT2010")
class(subway)
head(subway@data)
subway@bbox
head(subway@coords)
leaflet(subway) %>% addMarkers(subway)
sub_longlat <- spTransform(subway, CRS("+init=epsg:4326"))
leaflet(subway) %>% addMarkers(subway)
leaflet(subway) %>% addMarkers(lng = ~coords.x1, lat = ~coords.x2)
leaflet(sub_longlat) %>% addMarkers(lng = ~coords.x1, lat = ~coords.x2)
leaflet(sub_longlat) %>% addMarkers(data = sub_longlat,lng = ~coords.x1, lat = ~coords.x2)
leaflet() %>% addMarkers(data = sub_longlat,lng = ~coords.x1, lat = ~coords.x2)
leaflet() %>% addMarkers(data = sub_longlat,lng = coords.x1, lat = coords.x2)
leaflet() %>% addMarkers(data = sub_longlat,lng = ~coords.x1, lat = ~coords.x2)
?leaflet
leaflet(data = ny_longlat) %>% addMarkers()
leaflet() %>% addMarkers(data = sub_longlat,lng = ~coords.x1, lat = ~coords.x2)
head(subway@coords)
leaflet(sub_longlat) %>% addMarkers(data = sub_longlat@coords,lng = ~coords.x1, lat = ~coords.x2)
leaflet() %>% addMarkers(data = sub_longlat@coords,lng = ~coords.x1, lat = ~coords.x2)
class(sub_longlat@coords)
sub_longlat@coords
names(sub_longlat@coords)
sub_longlat@coords[1,1]
head(sub_longlat@coords[,1])
leaflet() %>% addMarkers(lng = sub_longlat@coords[,1], lat = sub_longlat@coords[,2])
leaflet() %>% addMarkers(lng = sub_longlat@coords[,1], lat = sub_longlat@coords[,2]) + addPolygons(sub_longlat)
leaflet() %>% addMarkers(lng = sub_longlat@coords[,1], lat = sub_longlat@coords[,2]) + addPolygons(data = sub_longlat)
leaflet() %>% addMarkers(lng = sub_longlat@coords[, 1], lat = sub_longlat@coords[, 2]) + addPolygons(data = sub_longlat,
lng = sub_longlat@coords[, 1],
lat = sub_longlat@coords[, 2])
leaflet(sub_longlat) %>% addMarkers(lng = sub_longlat@coords[, 1], lat = sub_longlat@coords[, 2]) + addPolygons(data = sub_longlat,
lng = sub_longlat@coords[, 1],
lat = sub_longlat@coords[, 2])
leaflet() %>% addMarkers(lng = sub_longlat@coords[, 1], lat = sub_longlat@coords[, 2]) + addPolygons(sub_longlat,
lng = sub_longlat@coords[, 1],
lat = sub_longlat@coords[, 2])
library(tidyverse)
subC <- merge(sub_longlat@data,sub_longlat@coords)
View(subC)
class(subway)
subC <- data_frame(sub_longlat@data,sub_longlat@coords)
subC <- data.frame(sub_longlat@data,sub_longlat@coords)
View(subC)
leaflet() %>% addMarkers(data = subC, lng = ~coords.x1, lat = ~coords.x2)
leaflet() %>% addMarkers(data = subC, lng = ~coords.x1, lat = ~coords.x2)
leaflet() %>% addMarkers(data = subC, lng = ~coords.x1, lat = ~coords.x2) %>% addProviderTiles("Stamen.Watercolor")
class(ny)
dim(ny@data)
dim(ny@)
dim(ny@polygons)
dim(ny@bbox)
View(ny@data)
ny_f <- fortify(ny)
dim(ny_f)
head(ny_f)
ny@data$id <- unique(ny_f$id)
View(ny@data)
nyshape <- merge(ny@data, ny_f, by.x = "id", by.y = "id")
View(nyshape)
get_map
get_map()
?get_map()
map <- get_map("New York", maptype = "terrain")
View(nyshape)
ggmap(map) + geom_polygon(
data = nyshape,
aes(
x = long,
y = lat,
group = id,
fill = Shape_Area
),
alpha = 0.4,
colour = "black"
) + scale_fill_gradientn(colours = c("red", "white", "blue"))
map<-get_map("New York City",maptype="terrain")
ggmap(map)+geom_polygon(data=shapeM,aes(x=long,y=lat,group=id,fill=Shape_Area),alpha=0.4,colour="black")+scale_fill_gradientn(colours = c("red","white","blue"))
ggmap(map) + geom_polygon(
data = nyshape,
aes(
x = long,
y = lat,
group = id,
fill = Shape_Area
),
alpha = 0.4,
colour = "black"
) + scale_fill_gradientn(colours = c("red", "white", "blue"))
map <- get_map("New York City", maptype = "terrain")
ggmap(map) + geom_polygon(
data = nyshape,
aes(
x = long,
y = lat,
group = id,
fill = Shape_Area
),
alpha = 0.4,
colour = "black"
) + scale_fill_gradientn(colours = c("red", "white", "blue"))
shape1<-readOGR(dsn="nyha_15a","nyha")
shape1<-spTransform(shape1,CRS("+init=epsg:4326"))
shape1.f<-fortify(shape1)
shape1@data$id<-unique(shape1.f$id)
shapeM<-merge(shape1.f,shape1@data,by.x="id",by.y="id")
map<-get_map("New York City",maptype="terrain")
ggmap(map)+geom_polygon(data=shapeM,aes(x=long,y=lat,group=id,fill=Shape_Area),alpha=0.4,colour="black")+scale_fill_gradientn(colours = c("red","white","blue"))
all.equal(shapeM,nyshape)
View(nyshape)
View(shapeM)
ny_f <- fortify(ny_longlat)
dim(ny_f)
ny@data$id <- unique(ny_f$id)
head(ny_f)
nyshape <- merge(ny_longlat@data, ny_f, by.x = "id", by.y = "id")
ny_longlat@data$id <- unique(ny_f$id)
nyshape <- merge(ny_longlat@data, ny_f, by.x = "id", by.y = "id")
map <- get_map("New York City", maptype = "terrain")
ggmap(map) + geom_polygon(
data = nyshape,
aes(
x = long,
y = lat,
group = id,
fill = Shape_Area
),
alpha = 0.4,
colour = "black"
) + scale_fill_gradientn(colours = c("red", "white", "blue"))
View(shape1.f)
View(nyshape)
leaflet() %>% addMarkers(data = subC, lng = ~coords.x1, lat = ~coords.x2) %>% addProviderTiles("Stamen.Toner")
leaflet() %>% addCircleMarkers(data = subC, lng = ~coords.x1, lat = ~coords.x2) %>% addProviderTiles("Stamen.Toner")
leaflet() %>% addCircle(data = subC, lng = ~coords.x1, lat = ~coords.x2) %>% addProviderTiles("Stamen.Toner")
leaflet() %>% addCircles(data = subC, lng = ~coords.x1, lat = ~coords.x2) %>% addProviderTiles("Stamen.Toner")
q()
